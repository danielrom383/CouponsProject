package com.danielrom.coupons.logic;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import com.danielrom.coupons.dao.CompanyDao;
import com.danielrom.coupons.dao.CouponDao;
import com.danielrom.coupons.entities.CouponEntity;
import com.danielrom.coupons.enums.ErrorType;
import com.danielrom.coupons.exceptions.ApplicationException;

@Controller
public class CouponController {

	@Autowired
	private CouponDao couponDao;
	@Autowired
	private CompanyDao companyDao;

	// -----------------------------Creates a new coupon--------------------------------

	public long createCoupon (CouponEntity coupon) throws ApplicationException {

		if (couponDao.getCoupon(coupon.getTitle()) != null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "There is already a coupon with the same title.");
		}

		if (companyDao.getCompany(coupon.getCompany().getCompanyName()) == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The company you inserted isn't recorded in our database.");
		}

		coupon.setCompany(companyDao.getCompany(coupon.getCompany().getCompanyName()));

		if (coupon.getEndDate().before(coupon.getStartDate())) {
			throw new ApplicationException(ErrorType.ILLEGAL_USER_INPUT, "Coupon end date cannot be before start date");
		}

		long autoGeneratedId = couponDao.createCoupon(coupon);

		if (autoGeneratedId > 0) {
			System.out.println("A new coupon by the name " + coupon.getTitle() + " was created successfully!");
		}

		return autoGeneratedId;
	}

	// ----------------------------------------Removes a coupon----------------------------------

	public void removeCoupon (long id) throws ApplicationException{

		CouponEntity coupon = getCoupon(id);

		if (coupon == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The coupon you're trying to remove doesn't exist");
		}

		couponDao.removeCoupon(id);
	}

	// --------------------------------------- Updates a coupon ---------------------------------
	public void updateCoupon (CouponEntity coupon) throws ApplicationException {

		if (companyDao.getCompany(coupon.getCompany().getCompanyName()) == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The company you inserted isn't recorded in our database.");
		}

		if (coupon.getEndDate().before(coupon.getStartDate())) {
			throw new ApplicationException(ErrorType.ILLEGAL_USER_INPUT, "Coupon end date cannot be before start date");
		}

		if (getCoupon(coupon.getId()) == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The coupon you're trying to update couldn't be found.");
		}
		couponDao.updateCoupon(coupon);
	}

	//--------------------------------------Gets a coupon(s)-----------------------------------------

	// Gets a specific coupon by it's id
	public CouponEntity getCoupon (long couponId) throws ApplicationException {

		return couponDao.getCoupon(couponId);
	}

	// Gets a specific coupon by it's title
	public CouponEntity getCoupon (String title) throws ApplicationException {

		return couponDao.getCoupon(title);
	}

	// Gets all the coupons that exist in the database
	public List <CouponEntity> getAllCoupons () throws ApplicationException {

		List <CouponEntity> allCoupons = couponDao.getAllCoupons();

		if (allCoupons == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "No coupons could be found.");
		}

		return allCoupons;
	}

	// Gets all the coupons that were made by a specific company
	public List<CouponEntity> getCompanyCoupons (long companyId) throws ApplicationException {

		List <CouponEntity> allCoupons = couponDao.getCompanyCoupons(companyId);

		if (allCoupons == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "No coupons could be found");
		}

		return allCoupons;
	}
}
