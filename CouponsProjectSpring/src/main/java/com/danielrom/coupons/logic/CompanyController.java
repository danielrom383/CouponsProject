package com.danielrom.coupons.logic;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;

import com.danielrom.coupons.dao.CompanyDao;
import com.danielrom.coupons.entities.CompanyEntity;
import com.danielrom.coupons.enums.ErrorType;
import com.danielrom.coupons.exceptions.ApplicationException;

@Controller
public class CompanyController {

	@Autowired
	private CompanyDao companyDao;

	// -----------------------------Creates a new company--------------------------------

	public long createCompany (CompanyEntity company) throws ApplicationException {

		if (companyDao.getCompany(company.getCompanyName()) != null) {
			throw new ApplicationException(ErrorType.COMPANY_NAME_ALREADY_EXISTS, ErrorType.COMPANY_NAME_ALREADY_EXISTS.getInternalMessage());
		}

		long autoGeneratedId = companyDao.createCompany(company);

		return autoGeneratedId;
	}

	// ----------------------------------------Removes a company----------------------------------

	public void removeCompany (long id) throws ApplicationException{
		
		CompanyEntity company = getCompany(id);

		if (company == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The company you're trying to remove doesn't exist");
		}
		
		companyDao.removeCompany(id);
	}

	// --------------------------------------- Updates a company ---------------------------------
	public void updateCompany (CompanyEntity company) throws ApplicationException {

		if (getCompany(company.getId()) == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "The company you're trying to update couldn't be found.");
		}

		companyDao.updateCompany(company);
	}

	// ------------------------------------Getters-------------------------------------

	public CompanyEntity getCompany(long id) throws ApplicationException {

		return companyDao.getCompany(id);
	}

	public CompanyEntity getCompany(String companyName) throws ApplicationException {

		return companyDao.getCompany(companyName);
	}

	public List <CompanyEntity> getAllCompanies () throws ApplicationException {

		List <CompanyEntity> allCompanies = companyDao.getAllCompanies();

		if (allCompanies == null) {
			throw new ApplicationException(ErrorType.DATA_NOT_FOUND, "No companies could be found.");
		}

		return allCompanies;
	}

}
